create  table vt_usr_prtc_stat
(
usr_id text,
que_id text,
tpc_id text,
mdl_id text,
crs_id text,
que_ans MAP<text,boolean>,
que_ans_tm MAP<text,int>,
que_strt_tm timestamp,
que_end_tm timestamp,
no_of_clks int,
revu boolean,
lrn  boolean,
skip boolean,
wrg_rsn set<text>,
que_diff text,
PRIMARY KEY ((usr_id),que_id,que_strt_tm)
);

create  table vt_usr_created_tsts
(
usr_id text,
que_book_id text,
crt_dt timestamp,
tst_nm text,
tst_id uuid,
PRIMARY KEY ((usr_id),tst_id)
);



create  table vt_vw_tsts
(
usr_id text,
que_book_id text,
crt_dt timestamp,
tst_nm text,
tst_id uuid,
PRIMARY KEY (tst_id)
);



create table ew_usr_tests_m
(
tst_id  uuid,
usr_id text,
tst_strt_tm timestamp,
tst_end_tm timestamp,
primary key(usr_id,tst_id)
);



create  table ew_usr_tests_dtl
(
tst_id  uuid,
usr_id text,
que_id text,
tpc_id text,
mdl_id text,
crs_id text,
que_ans MAP<text,boolean>,
que_strt_tm timestamp,
que_end_tm timestamp,
primary key(tst_id,que_id)
);



create  table ew_usr_tests_review
(
tst_id  uuid,
usr_id text,
que_id text,
tpc_id text,
mdl_id text,
crs_id text,
wrg_rsn set<text>,
usr_cmnt text,
primary key(tst_id,que_id)
);

create table usr_click_stats
(
clk_id uuid primary key,
link_nm text,
tag_typ text,
curr_pg text,
go_to_pg text,
usr_id text,
tkn text,
login_tkn text,
offset text,
key  text,
partition text,
clk_tm timestamp
)

create table usr_idle_stats
(
idl_id uuid primary key,
idl_msg text,
idl_rsn text,
usr_id text,
tkn text,
login_tkn text,
offset text,
key  text,
partition text,
clk_tm timestamp
)

